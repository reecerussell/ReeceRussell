{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport Layout from '../components/Layout';\nimport '../static/css/projects.css';\nimport fetch from 'isomorphic-unfetch';\nimport Error from 'next/error';\n\nvar Project =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  function Project(props) {\n    _classCallCheck(this, Project);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n  }\n\n  _createClass(Project, [{\n    key: \"render\",\n    value: function render() {\n      var descriptionParagraphs = [];\n      var descriptionArr = this.props.project.description.split('\\n');\n\n      for (var i = 0; i < descriptionArr.length; i++) {\n        var paragraph = descriptionArr[i];\n        if (paragraph === \"\") continue;\n        descriptionParagraphs.push(paragraph);\n      }\n\n      var content = this.props.hasProject ? React.createElement(Layout, {\n        title: this.props.name\n      }, React.createElement(Row, {\n        id: \"project\"\n      }, React.createElement(Col, {\n        md: {\n          offset: \"3\",\n          size: \"6\"\n        }\n      }, React.createElement(\"img\", {\n        src: this.props.project.imageUrl,\n        style: {\n          width: \"100%\"\n        },\n        alt: this.props.project.name\n      }), React.createElement(\"h1\", null, this.props.project.name), React.createElement(\"br\", null), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, React.createElement(\"a\", {\n        href: this.props.project.githubLink,\n        className: \"btn-source\"\n      }, \"View Source\")), React.createElement(\"br\", null), React.createElement(\"div\", {\n        className: \"text-justify\"\n      }, descriptionParagraphs.map(function (description, key) {\n        return React.createElement(\"p\", {\n          key: key\n        }, description);\n      }))))) : React.createElement(Error, {\n        statusCode: 404\n      });\n      return content;\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nProject.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var res, query, data, proj, hasProject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref.res, query = _ref.query;\n            console.log(query);\n            _context.next = 4;\n            return fetch(\"https://go.reecerussell.com/api/projects/\" + query.id);\n\n          case 4:\n            data = _context.sent;\n            _context.next = 7;\n            return data.json();\n\n          case 7:\n            proj = _context.sent;\n            hasProject = true;\n\n            if (proj == null || proj == undefined || proj == {}) {\n              hasProject = false;\n            } else {\n              hasProject = query.slug.toLowerCase() == proj.name.toLowerCase().replace(\" \", \"-\");\n            }\n\n            if (!hasProject) res.statusCode = 404;\n            return _context.abrupt(\"return\", {\n              project: proj,\n              query: query,\n              hasProject: hasProject\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Project;","map":{"version":3,"sources":["/Users/reecerussell/Projects/ReeceRussellReact/reecerussell/pages/project.js"],"names":["React","Row","Col","Layout","fetch","Error","Project","props","descriptionParagraphs","descriptionArr","project","description","split","i","length","paragraph","push","content","hasProject","name","offset","size","imageUrl","width","textAlign","githubLink","map","key","Component","getInitialProps","res","query","console","log","id","data","json","proj","undefined","slug","toLowerCase","replace","statusCode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Row, Col} from 'reactstrap';\nimport Layout from '../components/Layout';\nimport '../static/css/projects.css';\nimport fetch from 'isomorphic-unfetch';\nimport Error from 'next/error'\n\nclass Project extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let descriptionParagraphs = [];\n        const descriptionArr = this.props.project.description.split('\\n')\n\n        for (let i = 0; i < descriptionArr.length;i++) {\n            let paragraph = descriptionArr[i];\n\n            if (paragraph === \"\")\n                continue;\n\n            descriptionParagraphs.push(paragraph);\n        }\n\n        let content = this.props.hasProject ? (\n            <Layout title={this.props.name}>\n                <Row id=\"project\">\n                    <Col md={{offset:\"3\", size:\"6\"}}>\n                        \n                        <img src={this.props.project.imageUrl} style={{width:\"100%\"}} alt={this.props.project.name} />\n                        \n                        <h1>{this.props.project.name}</h1><br />\n                        <p style={{textAlign:\"center\"}}>\n                            <a href={this.props.project.githubLink} className=\"btn-source\">View Source</a>\n                        </p><br />\n                        <div className=\"text-justify\">\n                            {descriptionParagraphs.map((description, key) => (\n                                <p key={key}>{description}</p>\n                            ))}\n                        </div>                   \n                    </Col>\n                </Row>\n            </Layout>\n        ) : <Error statusCode={404} /> ;\n\n        return content;\n    }\n}\n\nProject.getInitialProps = async function({res, query}) {\n    console.log(query);\n    const data = await fetch(\"https://go.reecerussell.com/api/projects/\" + query.id);\n    const proj = await data.json();\n\n    let hasProject = true;\n\n    if (proj == null || proj == undefined || proj == {}) {\n        hasProject = false;\n    } else {\n        hasProject = query.slug.toLowerCase() == proj.name.toLowerCase().replace(\" \", \"-\");\n    }\n\n    if (!hasProject)\n        res.statusCode = 404;\n\n    return {\n        project: proj, \n        query: query,\n        hasProject: hasProject\n    };\n}\n\nexport default Project"]},"metadata":{},"sourceType":"module"}